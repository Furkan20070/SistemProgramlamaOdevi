;
;
;FURKAN ALI TURAN - 030721021
;
;ODEVI YAPMAK ICIN SOYLE BIR YAKLASIM KULLANDIM:
;1 - ) KULLANICIDAN KLASIK KARAKTER (RAKAM( GIRISI ALINIR, ALINAN RAKAMLAR 32 BIT SEKILDE (BX:DI)
;TUTULUR. GIRIS RAKAM DEGILSE BIP SESI VERILIR. GIRIS OVERFLOW VEYA MAKS DEGERDEN FAZLA ISE HATA
;VERILIR
;
;2 - ) CX REGISTERI 47 YE ATANIR, BU, MASKIMUM SAYI OLAN 4.100.200.300'E KADAR OLAN MAKS FIBO
;SAYISI MIKTARIDIR. BU SAYILAR HAFIZAYA BIR DIZIDE KAYDEDILMISTIR  
;
;3 - ) CX 47 DEN BASLAYARAK LOOP'A GIRILIR VE FIBO SAYILARI DIZISINDEKI SAYILAR DX:AX'E YUKLENIR
;BX:DI DAKI 32 BIT GIRIS SAYISI BUYUK FIBO SAYILARINDAN BASLAYARAK SIRAYLA HEPSIYLE KARSILASTIRILIR 
;
;4 - ) EGER BX:DI DAKI SAYI DX:AX DEKINDEN BUYUKSE CX'IN O ANKI DEGERI INDEKS OLARAK KULLANILARAK
;MEVCUT ISLEMDEKI FIBONACCI SAYISI HAKKINDA GEREKLI BILGILER CEKILIR (HUMAN READABLE STRING VE
;ASAL OLUP OLMADIGI) VE BUNLARA GORE YAZDIRMA ISLEMI YAPILIR. BURADA SOZ KONUSU DEGERLERI VE ONLARLA 
;ILGILI BIRTAKIM DEGERLERI (OFFSETLER GIBI) PYTHON SCRIPTLERI ILE DISARIDA HESAPLADIM.
;
;5 - ) CX 0 DEGILSE 3. ADIMA DONULUR. 0 ISE CIKILIR. 
;
;
;HOCAM TERMINAL EKRANI 80X25 CHAR OLMALI YOKSA STRINGLER TAM AKMIYOR
;
;

org 100h ;BU OLMADAN BOZULUYOR 

start: ;BASLANGIC FONKSIYONLARI
    call startmsg ;STARTMSG FONKSIYONUNU CAGIR
    call input32bit ;input32bit FONKSIYONUNU CAGIR
    
startmsg: ;BIR SAYI GIRIN MESAJI
    mov ah, 09h  ;STRING YAZDIRMA KODUNU AH'YE AT   
    mov dx, offset start_message ;OFFSET OPERATORU ILE DEGISKENIN BASLANGIC ADRESINI YUKLUYORUZ
    int 21h ;INTERRUPT
    ret ;GERI DON

input32bit: ;GIRIS FONKSIYONU. SAYIYI 32 BIT OLARAK ALIYORUZ
    mov cx, 10 ;MAKSIMIM 10 SAYI
    lea si, buffer ;SI REGISTERINA BUFFER (10 KARAKTER) EFEKTIF ADRESINI YUKLE
    
input_loop: ;GIRDI DONGUSU
    ;21h INTERUUPT'I 01h KODU ILE CAGRILDIGINDA KARAKTER OKUR
    mov ah, 01h ;KARAKTER OKUMA KODU 
    int 21h ;INTERRUPT
    
    cmp al, 0Dh ;ENTER KARAKTERI ISE DONGUDEN CIK
    je process_input ;VE process_input FONKSIYONUNA GIT
    
    ;KARAKTERIN 0 ILE 9 ARASINDA OLDUGUNDAN EMIN OL
    cmp al, '0' ;0 KODUNDAN KUCUKSE INVALID
    jb invalid_input ;INVALID FONKSIYONUNA ZIPLA
    cmp al, '9' ;9 KODUNDAN BUYUKSE INVALID
    ja invalid_input ;INVALID FONKSIYONUNA ZIPLA
    
    ;BUFFER DEGISKENINE OKUNAN KARAKTERI (AL'DE) YAZ
    mov [si], al
    ;BIR SONRAKI KARAKTER ICIN ADRESI 1 ARTIR
    inc si
    dec cx ;CX'I 1 AZALTIYORUZ
    jnz input_loop ;CX 0 DEGILSE LOOP 
    
    
    
;ENTER TUSUNA BASILDIGINDA BU FONKSIYONA GECIYORUZ BUFFER'I ISLEMEK ICIN
process_input:
    mov ah, 09h ;STRING YAZMA KODUNU ATA
    mov dx, offset newline  ;newline DEGISKENINI YAZ
    int 21h ;INTERRUPT CAGRISI
    mov byte ptr [si], '$';BUFFER'IN SONUNA TERMINATE KARAKTERI EKLE
    lea si, buffer ;TEKRAR BUFFER'IN BASINA DON
    
    ;32 BIT DEGERI TUTMASI ICIN BX VE DI REGISTERLERINI 0LIYORUZ
    xor bx, bx
    xor di, di
    
    
;BUFFER'I 32 BIT SAYIYA DONUSTURDUGUMUZ YER
convert_input:
    mov al, [si] ;SI ADRESINDEKI DEGERI AL'YE AT
    cmp al, '$' ;$ STRING SONU IFADESIMI?
    je convert_done ;EGER BUFFER'IN SONUNDAYSAK DONUSTURME ISLEMINI BITIR :)
    
    sub al, '0' ;ASCII KARAKTERINI SAYISAL DEGERE CEVIR
    xor ah, ah ;AX'I SADECE AL'DEKI KARAKTER OLARAK ISTIYORUZ
    
    ;SIRADAKI ISLEMLER ICIN AX GEREKIYOR. MEVCUT SAYIYI KAYDET
    push ax
    
    ;HER RAKAM GELDIGINDE BX:DI'YI 10 ILE CARPIYORUZ
    ;DUSUK ANLAMLI YERLERI TUTTUGU ICIN ILK ONCE DI
    mov ax, di
    mov cx, 10
    mul cx   
    mov di, ax ;DUSUK BYTELARI DI'YA AT
    mov temp, dx ;YUKSEK BYTELARI temp DEGISKENINE KAYDET
    
    ;YUKSEK ANLAMLI (BX) BYTELARI 10 ILE CARP
    mov ax, bx
    mul cx
    add ax, temp ;YUKSEK ANLAMLI BYTELARI TOPLA
    mov bx, ax ;YUKSEK ANLAMLI 16 BIT
    
    ;YUKSEK 16 BITLERI CARPTIGIMIZ ICIN DX 0 DEGILSE OVERFLOW
    or dx, dx
    jnz overflow ;SIFIR DEGILSE overflow_error FONKSIYONUNA GIT
    
    ;KAYDETTIGIMIZ SAYIYI TEKRAR YUKLE
    pop ax
    add di, ax ;SAYIYI DUSUK ANLAMLI 16 BIT'E EKLE
    adc bx, 0 ;TASMA VARSA BX'I ARTIR
    
    jc overflow ;TOPLAMADAN SONRA CARRY BITI 1 ISE HATA VER
    
    ;BIR SONRAKI SAYIYA GEC
    inc si  ;SI GOSTERICISINI 1 ARTIR
    jmp convert_input ;LOOP
          
;EGER GIRILEN SAYI 4.100.200.300'UN USTUNDEYSE HATA VERIP CIK
above_limit:
    mov ah, 09h ;STRING YAZDIRMA KODU
    mov dx, offset num_limit_message ;LIMIT ASILDI MESAJINI DX'E GONDER
    int 21h ;INTERRUPT
    mov al, 00h  ;CIKIS KODU
    mov ah, 4Ch ;CIKIS KODU2    
    int 21h ;INTERRUPT       
    ret

;4.100.200.300 SAYISINI DX:AX SEKLINDE HAFIZADAN YUKLEYIP, GIRILEN DEGER ILE KARSILASTIRIYORUZ    
convert_done:
    mov ax, [num_limit_low] ;MAKS SAYININ DUSUK 16 BITINI AX'E AT
    mov dx, [num_limit_high] ;MAKS SAYININ YUKSEK 16 BITINI DX'E AT

    cmp bx, dx ;YUKSEK 16 BIT KARSILASTIRMASINDAN SONRA DUSUKLERE GEREK KALMIYOR (ESIT DEGILLERSE)
    ja above_limit ;YUKSEK ISE above_limit FONKSIYONU
    jb ok_num_val  ;DUSUK ISE DEVAM
    cmp di, ax   ;YUKSEK 16 BITLER ESITSE BURADAN DEVAM
    ja above_limit ;YUKSEK ISE above_limit FONKSIYONU
    jb ok_num_val  ;DUSUK ISE DEVAM
    
    jmp ok_num_val ;ESITSE YINE DEVAM
            
     
ok_num_val: ;HAFIZADAKI FIBONACCI SAYILARINI KARSILASTIRDIGIMIZ DONGUNUN HAZIRLIGI 
    mov cx, array_size ;4.100.200.300'DEN KUCUK MAKSIMUM 47 FIBONACCI SAYISI
    
check_loop:
    mov ax, cx ;KARSILASTIRMA ISLEMINI CX DEGERI UZERINDEN YAPACAGIZ
    dec ax ;INDISLEME ISLEMI ICIN 1 CIKAR
    shl ax, 2 ;4 ILE CARP (HER ELEMENT 4 BYTE) 
    mov si, ax ;AX'I SI'YE AT
    
    ;fibo_numbers DIZISINDEN 32 BIT SAYIYI DX:AX SEKLINDE ALIYORUZ
    mov ax, word ptr [fibo_numbers + si]
    mov dx, word ptr [fibo_numbers + si + 2] ;2 BYTE OFFSET EKLEDIK SIGDIRMAK ICIN
    
    ;BI:DI'DA INPUT ALDIGIMIZ 32 BIT SAYI VARDI...
    cmp bx, dx  ;YUKSEK 16 BIT KARSILASTIRMASINDAN SONRA DUSUKLERE GEREK KALMIYOR (ESIT DEGILLERSE)
    jb input_does_not_contain_fibonacci ;YUKSEK ISE BU SAYIYI ATLAMA FONKSIYONU 
    ja input_contains_fibonacci ;DUSUK ISE YAZDIRMA FONKSIYONU
    cmp di, ax  ;YUKSEK 16 BITLER ESITSE BURADAN DEVAM
    jb input_does_not_contain_fibonacci  ;YUKSEK ISE BU SAYIYI ATLAMA FONKSIYONU 
    ja input_contains_fibonacci  ;DUSUK ISE YAZDIRMA FONKSIYONU
    
    
    loop check_loop ;CX 0 OLANA KADAR DONGU
    ;CX 0 OLDUGUNDA PROGRAMDAN CIK
    MOV ah, 4Ch ;CIKIS KODU2   
    MOV al, 00h ;CIKIS KODU1  
    INT 21h ;INTERRUPT        
    ret
    
;DIZIDEKI SAYI INPUT'TAN KUCUKSE BURAYA GELIYORUZ.
;HAFIZADAKI DIGER DIZILERDEN ILGILI SAYI ILE ILGILI BILGILERI ALIYORUZ
input_contains_fibonacci:
    pusha ;REGISTERLAR LAZIM OLACAGI ICIN ALAYINI KAYDET 
    dec cx ;BUNU BOYLE YAPMAYICA YANLIS OLUYOR NEDENSE
    call print_fibo_string ;BU FONKSIYON ILE ILGILI SAYI HAKKINDA HERSEYI YAZIYORUZ
    popa ;REGISTERLARI GERI YUKLE
    loop check_loop ;check_loop FONKSIYONUNA GERI DON
    ret
    
;GIRDI MEVCUT KARSILASTIRILAN SAYIDAN KUCUKSE GECMEK ICIN YARDIMCI FONKSIYON    
input_does_not_contain_fibonacci:
    loop check_loop ;check_loop FONKSIYONUNA GERI DON
    ret
    

;INVALID KARAKTERLERDE COK GUZEL BIR BIP SESI CIKARIYOR
invalid_input:
    mov ah, 02h ;KARAKTER YAZDIRMA KODU
    mov dl, 07h ;BIP SESINI DL'YE YUKLE
    int 21h  ;INTERRUPT
    jmp input_loop ;INPUT ALMAYA GERI DON

;KULLANICI SACMA SAPAN BIR DEGER GIRMISSE BASA AL HERSEYI
overflow:

    ;HATA MESAJI
    mov ah, 09h ;STRING KODU
    mov dx, offset overflow_message ;HATA MESAJI ADRESINE GIT
    int 21h ;INTERRUPT
    
    ;BASA DON ALLAH KAHRETSIN
    jmp start
    
;CX'IN GOSTERDIGI FIBONACCI STRINGINI YAZIYORUZ BURADA
;FIBONACCI STRINGLERI ILGILI DIZIDE HUMAN-READABLE FORMATTA KAYITLI
print_fibo_string:
    ;REGISTERLARI KAYDET
    pusha
    
    ;"fibonacci (" YAZ;
    mov ah, 09h
    mov dx, offset fibo_left
    int 21h
    
    ;HANGI CX'DE OLDUGUMUZU YAZ
    mov si, cx
    shl si, 1 ;OFFSETLER 2 BYTE OLDUGU ICIN 2 ILE CARPIYORUZ
    mov si, [fib_index_offsets + si] ;INDEX DIZISINDEN ILGILI OFFSETI AL
    mov ah, 09h ;STRING YAZDIRMA KODU
    mov dx, offset fib_indexes ;DX'I fib_indexes DEGISKENININ ADRESINE AYARLA
    add dx, si  ;DX'E OFFSETI EKLE
    int 21h ;INTERRUPT
    
    ;") = " " YAZ
    mov ah, 09h
    mov dx, offset fibo_right
    int 21h
    
    ;DIZIDEKI ILGILI STRINGIN OFFSET'INI ALIYORUZ
    mov si, cx ;HANGI SAYIDAYSAK ONU AL
    shl si, 1 ;OFFSETLER 2 BYTE OLDUGU ICIN 2 ILE CARP
    mov si, [fib_string_offsets + si]  ;SI'YA OFFSET DEGERINI ATA
    mov ah, 09h ;STRING YAZDIRMA KODU
    mov dx, offset fib_strings ;DX'I STRING DIZISININ BASINA AT
    add dx, si ;DX'I ILGILI STRINGIN ADRESINE GETIR
    int 21h ;INTERRUPT
    
    ;BOSLUK
    mov ah, 09h
    mov dx, offset space
    int 21h
    
    ;fibo_prime_info DIZISINDEN ASAL BILGISINI AL 
    mov si, cx ;HANGI SAYIDASYAK ONUN BILGISI
    shl si, 1  ;VERILER WORD SEKLINDE OLDUGU ICIN 2 ILE CARP
    mov si, [fib_prime_info + si] ;MEVCUT FIBONACCI SAYISI ASALMI? ONUN BILGISINI AL
    cmp si, 1 ;DIZIDEN ALDIGIMIZ SONUC 1 ISE ASAL, 0 ISE DEGIL
    ;SAYI ASAL ISE (Asal) YAZ, DEGIL ISE YENI SATIRA GEC
    je indicate_prime ;ASAL ISE ASAL YAZDIRMA FONKSIYONUNA ATLA
    jb print_newline ;YENI SATIRA GECIS FONKSIYONU
    
indicate_prime:
    mov ah, 09h ;STRING YAZDIRMA KODU
    mov dx, offset fib_prime_text ;(Asal) STRINGINE ISARET ET
    int 21h ;INTERRUPT
    
    
print_newline:
    mov ah, 09h ;STRING YAZDIRMA KODU
    mov dx, offset newline ;YENI SATIRA GECIS STRINGI
    int 21h  ;INTERRUPT
    
    popa
    ret

.DATA:
buffer db 11 dup(0) ;10 BASAMAK VE $ ISARETI ICIN DIZI
temp dw 0 ;32 BIT SAYIYI ALMAK ICIN GECICI DEGISKEN
overflow_message db 0Dh,0Ah,'32 bit limitini gectiniz!!!1!1!11!!!!11',0Dh,0Ah,'$' ;OVERFLOW MESAJI 

;FIBO SAYILARI BUNLARI BU DIZIDEN DX:AX REGISTERLARINA ALIYORUZ
fibo_numbers dd 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040, 1346269, 2178309, 3524578, 5702887, 9227465, 14930352, 24157817, 39088169, 63245986, 102334155, 165580141, 267914296, 433494437, 701408733, 1134903170, 1836311903
array_size equ 46 ;FIBO SAYILARI DIZI BOYUTU
fibo_left db 'fibonacci ($';HANGI FIBO SAYISINDAYIZ? SOL KISIM
fibo_right db ') = $';HANGI FIBO SAYISINDAYIZ? SAG KISIM
newline db 0Dh, 0Ah, '$';YENI SATIR STRINGI

;OKUNABILIR FORMATTAKI FIBO SAYILARI
fib_strings db "0$", "1$", "1$", "2$", "3$", "5$", "8$", "13$", "21$", "34$", "55$", "89$", "144$", "233$", "377$", "610$", "987$", "1.597$", "2.584$", "4.181$", "6.765$", "10.946$", "17.711$", "28.657$", "46.368$", "75.025$", "121.393$", "196.418$", "317.811$", "514.229$", "832.040$", "1.346.269$", "2.178.309$", "3.524.578$", "5.702.887$", "9.227.465$", "14.930.352$", "24.157.817$", "39.088.169$", "63.245.986$", "102.334.155$", "165.580.141$", "267.914.296$", "433.494.437$", "701.408.733$", "1.134.903.170$", "1.836.311.903$"

;OKUNABILIR FORMATTAKI FIBO SAYILARININ ILGILI DIZI ICINDEKI BASLANGIC OFFSETLERI
fib_string_offsets dw 0, 2, 4, 6, 8, 10, 12, 14, 17, 20, 23, 26, 29, 33, 37, 41, 45, 49, 55, 61, 67, 73, 80, 87, 94, 101, 108, 116, 124, 132, 140, 148, 158, 168, 178, 188, 198, 209, 220, 231, 242, 254, 266, 278, 290, 302, 316

;KACINCI FIBO SAYISINDA OLDUGUMUZU GOSTEREN SAYILAR
fib_indexes db "0$", "1$", "2$", "3$", "4$", "5$", "6$", "7$", "8$", "9$", "10$", "11$", "12$", "13$", "14$", "15$", "16$", "17$", "18$", "19$", "20$", "21$", "22$", "23$", "24$", "25$", "26$", "27$", "28$", "29$", "30$", "31$", "32$", "33$", "34$", "35$", "36$", "37$", "38$", "39$", "40$", "41$", "42$", "43$", "44$", "45$", "46$", "47$"

;KACINCI FIBO SAYISINDA OLDUGUMUZU YAZDIRMAK ICIN KULLANIDIGIMIZ DIZIDEKI BASLANGIC OFFSETLERI
fib_index_offsets dw 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 23, 26, 29, 32, 35, 38, 41, 44, 47, 50, 53, 56, 59, 62, 65, 68, 71, 74, 77, 80, 83, 86, 89, 92, 95, 98, 101, 104, 107, 110, 113, 116, 119, 122, 125, 128, 131

fib_prime_text db "(Asal)$" ;ASAL SAYI BELIRTME METINI

space db "  $"  ;BOSLUK DEGISKENI

;HANGI FIBONACCI SAYILARI ASAL?
fib_prime_info dw 0, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1

start_message db "Lutfen bir sayi girin (maks 4.100.200.300): $" ;SAYI GIRIN MESAJI

num_limit_low  dw 0176Ch ;SAYI LIMITI DUSUK 16 BIT (HEX)
num_limit_high dw 0F464h ;SAYI LIMITI YUKSEK 16 BIT (HEX)

num_limit_message db 0Dh, 0Ah, "Maks degeri astiniz!!1!11!!1$" ;SAYI LIMITI MESAJI